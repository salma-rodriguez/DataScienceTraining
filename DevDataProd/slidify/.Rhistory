y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
?hatvalues
hat(x)
hat(y)
hatvalues(lm(y ~ x))
round(hatvalues(lm(y ~ x)), 3)
round(hatvalues(lm(y ~ x)), 4)
dfbeta(lm(y ~ x))
?dfbeta
influence.measures(lm(y ~ x))
anova(fitb, fita)
anova(fita, fitb)
fita = lm(mpg ~ factor(cyl) + wt)
fita = lm(mpg ~ factor(cyl) + wt, data = mtcars)
fitb = lm(mpg ~ factor(cyl) + wt + factor(cyl) * wt, data = mtcars)
anova(fita, fitb)
fitb
plot(fit)
par(mfrow = c(2, 2)); plot(fit)
data.frame
?data.frame
influence.measures(lm(mtcars$mpg ~ .))
influence.measures(lm(mpg ~ .), data = mtcars)
influence.measures(lm(mtcars$mpg ~ disp))
influence.measures(lm(mtcars$mpg ~ mtcars$disp))
?multiplot
help.search("multiplot")
library(gridExtra)
?vif
vif(fit)
am <- lm(mpg ~ I(am == 1) + . - wt, data = mtcars)
coef(am)
am <- lm(mpg ~ I(am == 1) + . -wt, data = mtcars)
coef(am)
am <- lm(mpg ~ I(am == 0) + . -wt, data = mtcars)
coef(am)
am <- lm(mpg ~ factor(am) + . -wt, data = mtcars)
coef(am)
am
mtcars$am
am <- lm(mpg ~ factor(am) + wt, data = mtcars)
am
am <- lm(mpg ~ I(1 * am)+1 + wt, data = mtcars)
am
mt1 = subset(mtcars, am == 0)
mt2 = subset(mtcars, am == 1)
help(mtcars)
vif(mt1)
fit1 = lm(mt1 ~ .)
fit1 = lm(mt1 ~ ., data = mtcars)
head(mt1)
fit1 = lm(mpg ~ ., data = mt1)
fit2 = lm(mpg ~ ., data = mt2)
vif(fit1)
alias(fit1)
head(mtcars)
?geom_smooth
?anova
fit1 = lm(mpg ~ ., data = mt1)
fit2 = lm(mpg ~ . -disp, data = mt1)
coef(fit1)
coef(fit2)
fit3 = lm(mpg ~ . -disp -gear, data = mt1)
coef(fit3)
fit3 = lm(mpg ~ . -gear, data = mt1)
coef(fit3)
fit3 = lm(mpg ~ . -carb, data = mt1)
coef(fit3)
?influence.measure
?influence.measures
?geom_smooth
fit3 = lm(mpg ~ . -drat, data = mt1)
coef(fit3)
fit3 = lm(mpg ~ . -hp, data = mt1)
coef(fit3)
coef(fit1)
fit3 = lm(mpg ~ ., data = mt2)
fit1 = lm(mpg ~ .-drat, data = mt2)
coef(fit1)
coef(fit3)
exp(2, 88/3)
2^(88/3)
?fft
require(mass)
data(shuttle)
library(mass)
library(MASS)
data(shuttle)
help(shuttle)
head(shuttle)
head(shuttle[, use])
head(shuttle[use])
head(shuttle[, shuttle$use])
head(shuttle$use)
shuttle$use <- which(use == "auto", data = shuttle)
shuttle$use <- which(use == "auto", shuttle)
shuttle$use <- which(shuttle$use == "auto")
length(which(shuttle$use == "auto"))
length(shuttle$use)
head(which(shuttle$use == "auto"))
shuttle$use <- shuttle$use = "auto"
shuttle$use <- shuttle$use == "auto"
head(shuttle)
shuttle$use <- shuttle$use * 1
head(shuttle)
tail(shuttle)
class(shuttle$use)
fit = glm(use ~ wind, data = shuttle, family = "binomial")
summary(fit)
head(shuttle)
exp(fit$coef)
fit$coef
fit$coef[2]
fit$coef[2]/(1-fit$coef[2])
log(fit$coef[2]/(1-fit$coef[2]))
fit$coef[2]/(1-fit$coef[2])
fit = glm(use ~ wind, data = shuttle, family = "binomial")
data(shuttle)
head(data)
head(shuttle)
shuttle$use <- (shuttle$use == "auto") * 1
head(shuttle)
fit$coef[2]/(1-fit$coef[2])
summary(fit)$coef
coef(fit)
(coef(fit)[2]-1)/coef(fit)[2]
fit$coef[2]/(1-fit$coef[2])
fit$coef[1]/fit$coef[2]
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
fit$coef[1]/fit$coef[2]
fit$coef[2]/fit$coef[1]
fit$coef[2]/(1-fit$coef[2])
data(shuttle)
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind, data = shuttle, family = "binomial")
summary(fit)
fit$coef[1]/fit$coef[2]
fit$coef[1]/(1-fit$coef[1])
fit$coef[2]/(1-fit$coef[2])
shuttle$use <- (shuttle$use == "auto") * 1
fit = glm(use ~ wind, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
data(shuttle)
fit = glm(use ~ wind, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
head(shuttle$use)
length(shuttle$use)
shuttle$use
fit = glm(use ~ wind, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
fit = glm(use ~ wind * magn, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit = glm(use ~ wind - magn, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
fit = glm(use ~ magn, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
summary(fit)
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind - magn, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit$coef[2]/(1-fit$coef[2])
summary(fit)
fit$coef
p = coef[2]+fit$coef[3]+fit$coef[4]+fit$coef[5]
p = fit$coef[2]+fit$coef[3]+fit$coef[4]+fit$coef[5]
p/(1-p)
p = fit$coef[2]-fit$coef[3]-fit$coef[4]-fit$coef[5]
p/(1-p)
?slidify
?anova
fit = glm((1-use) ~ wind, data = shuttle, family = "binomial")
fit = glm((factor(1)-use) ~ wind, data = shuttle, family = "binomial")
head(shuttle)
shuttle$usenum = (shuttle$use == "auto") * 1
head(shuttle)
tail(shuttle)
shuttle$windnum = (shuttle$wind == "head") * 1
head(shuttle)
fit = glm(use ~ wind, data = shuttle, family = "binomial")
summary(fit)
coef(fit)
coef(fit)[2]
exp(coef(fit)[2])
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
exp(coef(fit)[2])
coef(fit[2])
coef(fit)[2]
class(shuttle$auto)
head(shuttle)
class(shuttle$use)
class(shuttle$wind)
fit = glm(usenum ~ windnum, data = shuttle, family = "binomial")
exp(coef(fit)[2])
class(shuttle$magn)
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
anova(fit)
exp(summary(fit)$coef[1])
summary(fit)$coef
coef(fit)
exp(coef(fit)[1])
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
exp(coef(fit)[1])
head(shuttle)
shuttle$nouse = 1 - shuttle$nouse
shuttle$nouse <- 1 - shuttle$nouse
shuttle$nouse <- 1 - shuttle$use
data(shuttle)
shuttle$usenum = (shuttle$use == 1) * 1
shuttle$windnum = (shuttle$wind == 1) * 1
data(shuttle)
shuttle$usenum = (shuttle$use == 1) * 1
shuttle$windnum = (shuttle$wind == 1) * 1
head(shuttle)
data(shuttle)
shuttle$usenum = (shuttle$use == "auto") * 1
shuttle$windnum = (shuttle$wind == "head") * 1
head(shuttle)
shuttle$nouse = 1-shuttle$use
head(shuttle)
shuttle$nouse = 1-shuttle$usenum
head(shuttle)
head(shuttle)
fit = glm(nouse ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
fit = glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit1 = glm(use ~ wind + magn, data = shuttle, family = "binomial")
fit2 = glm(nouse ~ wind + magn, data = shuttle, family = "binomial")
summary(fit1)
coef(fit1)
coef(fit2)
fit1 = glm(use ~ wind, data = shuttle, family = "binomial")
fit2 = glm(nouse ~ wind, data = shuttle, family = "binomial")
coef(fit1)
coef(fit2)
summary(fit1)[0]
summary(fit1)[1]
summary(fit1)[2]
summary(fit1)
summary(fit2)
head(shuttle)
nousenum <- (shuttle$use == 0) * 1
head(shuttle)
shuttle$nouse <- (shuttle$use == 0) * 1
head(shuttle)
fit1 = glm(use ~ wind, data = shuttle, family = "binomial")
fit1 = glm(usenum ~ wind, data = shuttle, family = "binomial")
fit2 = glm(nouse ~ wind, data = shuttle, family = "binomial")
tail(shuttle)
shuttle$nouse <- (shuttle$use == "noauto") * 1
fit2 = glm(nouse ~ wind, data = shuttle, family = "binomial")
coef(fit1)
coef(fit2)
summary(fit2)
summary(fit1)
data(InsectSprays)
head(InsectSprays)
class(InsectSprays$spray)
length(unique(InsectSrpays$spray))
length(unique(InsectSprays$spray))
fit = glm(count ~ spray, family = "Poisson")
fit = glm(count ~ spray, family = "poisson")
fit = glm(count ~ spray, data = InsectSprays, family = "poisson")
summary(fit)
exp(coef(fit)[1])
coef(fit)[1]
exp(coef(fit)[2])
fit = glm(count ~ I(sprayB) + I(sprayA), data = InsectSprays, family = "poisson")
fit = glm(count ~ I(spray == "B") + I(spray == "A"), data = InsectSprays, family = "poisson")
summary(fit)
fit = glm(count ~ I(spray == "A"), data = InsectSprays, family = "poisson")
summary(fit)
exp(coef(fit)[2])
coef(fit)
coef(fit)[2]
fit = glm(count ~ I(spray == "A") + I(spray == "C") + I(spray == "D") + I(spray == "E") + I(spray == "F"), data = InsectSprays, family = "poisson")
summary(fit)
exp(coef(fit)[2])
log(10)
log(e)
log(2.302585)
log(.8340224)
log(-0.181495)
x = rnorm(10)
x
count = -5:5
count
glm(count ~ x + offset(3), family = poisson)
glm(count ~ x + 3, family = poisson)
x + 3
glm(count ~ (x + 3), family = poisson)
glm(count ~ (x + 3), family = "poisson")
glm(count ~ (x + 3), data = cbind(count, x), family = "poisson")
cbind(count, x)
nrow(count)
length(count)
length(x)
count = -5:4
glm(count ~ (x + 3), family = "poisson")
glm(count ~ (x + 3), data = data.frame(cbind(count, x)), family = "poisson")
data.frame(cbind(count, x))
d1 = data.frame(cbind(count, x))
glm(count ~ (x + 3), data = d1, family = "poisson")
d1$offset = d1$x + 3
glm(count ~ x + offset, data = d1, family = "poisson")
glm(count ~ x + offset, data = d1, family = poisson)
glm(count ~ x + offset, data = d1, family = poisson)
count = 0:9
count
count = 1:10
count
d1 = data.frame(cbind(count, x))
d1
d1$offset = d1$x + 3
glm(count ~ x + offset, data = d1, family = poisson)
d1$offset = log(d1$count)
d1
d1$offset1 = log(d1$count)
d1$offset2 = log(d1$count) + log(10)
d1
fit1 = glm(count ~ x + offset1, data = d1, family = poisson)
fit2 = glm(count ~ x + offset2, data = d1, family = poisson)
coef(fit1)
coef(fit2)
fit1 = glm(count ~ (x + offset1), data = d1, family = poisson)
fit2 = glm(count ~ (x + offset2), data = d1, family = poisson)
coef(fit1)
coef(fit2)
d1$x1 = x + offset1
d1$x1 = d1$x + d1$offset1
d1$x2 = d1$x + d1$offset2
fit1 = glm(count ~ x1, data = d1, family = poisson)
fit1 = glm(count ~ x2, data = d1, family = poisson)
coef(fit1)
coef(fit2)
fit1 = glm(count ~ x1, data = d1, family = poisson)
fit2 = glm(count ~ x2, data = d1, family = poisson)
coef(fit1)
coef(fit2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
pi
e
E
ee
(1 + 5i) * (1 - 5i)
length(y)
knots = seq(0, 8 * pi, length = 11)
knots
linear.model = lm(y ~ x)
segment.mod1 = segmented(linear.model, seg.Z = ~x, psi = c(.0000001, .0000001))
library(segmented)
install.packages("segmented")
library(segmented)
segment.mod1 = segmented(linear.model, seg.Z = ~x, psi = c(.0000001, .0000001))
?segmented
segment.mod1 = segmented(linear.model, seg.Z = ~x, psi = x
)
segment.mod1 = segmented(linear.model, seg.Z = ~x, psi = NA)
segment.mod1 = segmented(linear.model, seg.Z = ~x, psi = c(0.0000001,0.000001))
plot(segment.mod1)
head(shuttle)
fit = glm(nouse ~ wind, data = shuttle, family = poisson)
coef(fit)
fit = glm(use ~ wind, data = shuttle, family = poisson)
fit = glm(usenum ~ wind, data = shuttle, family = poisson)
coef(fit)
fit = glm(use ~ wind, data = shuttle, family = poisson)
data(shuttle)
shuttle$nouse = (shuttle$use == "noauto") * 1
head(shuttle)
fit = glm(use ~ wind, data = shuttle, family = poisson)
fit <- glm(use ~ wind, data = shuttle, family = poisson)
shuttle$usenum = (shuttle$use == "auto") * 1
fit <- glm(usenum ~ wind, data = shuttle, family = poisson)
coef(fit)
fit <- glm(nouse ~ wind, data = shuttle, family = poisson)
coef(fit)
fit <- glm(nouse ~ wind, data = shuttle, family = binomial)
fit <- glm(usenum ~ wind, data = shuttle, family = binomial)
coef(fit)
fit <- glm(nouse ~ wind, data = shuttle, family = binomial)
coef(fit)
fit = glm(use ~ wind + magn, data = shuttle, family = binomial)
summary(fit)
head(data)
head(shuttle)
shuttle$tailwind = (shuttle$wind == "tail") * 1
fit = glm(use ~ windtail + magn, data = shuttle, family = binomial)
fit = glm(use ~ tailwind + magn, data = shuttle, family = binomial)
summary(fit)
shuttle$headwind = (shuttle$wind == "head") * 1
fit = glm(use ~ headwind + magn, data = shuttle, family = binomial)
summary(fit)
exp(coef(fit)[2])
coef(fit)[2]
fit = glm(use ~ I(wind == "head") + I(wind == "tail") + magn, data = shuttle, family = binomial)
coef(fit)[2]
summary(fit)
exp(coef(fit)[2])
fit = glm(use ~ wind + magn, data = shuttle, family = binomial)
summary(fit)
fit = glm(use ~ wind, data = shuttle, family = binomial)
summary(fit)
fit = glm(use ~ wind + magn, data = shuttle, family = binomial)
summary(fit)
exp(coef(fit)[2])
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4))
plot(jitter(child, 4) ~ parent, galton)
regrline = lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit = lm(child ~ parent, data = galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
cor(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(galton$children)
?var
varChild <- var(x = galton$children)
varChild <- var(x = galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(fit$coef[2])
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gpa_nor ~ gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(galton$child ~ galton$parent)
fit <- lm(child ~ parent, galton)
(fit$residuals)^2/(n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- (galton$child - sTot)
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
swirl()
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1)
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
lm(child ~ 1, galton)
view(trees)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2
<- lm(Volume ~ Height + Constant -1, trees)
trees2 <- lm(Volume ~ Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
?solve
install.packages("PerformanceAnalytics")
?merge
?chart.CumReturn
?chart.CumReturns
library(PerformanceAnalytics)
?chart.CumReturns
?chart.Boxplot
?table.Stats
getwd()
setwd("../Downloads/devdataprod-015/slidify/")
slidify("presentation.Rmd")
library(slidify)
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
slidify("presentation.Rmd")
